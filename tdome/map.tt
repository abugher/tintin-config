#nop Include this line in every file to set the command character.

/*
 * Enter 'M' to turn on the map.  If no map exists:
 *   #map create world
 *   #map goto 1
 *   mw
 * Then maybe restart tintin++, and maybe turn on the map again if that doesn't
 * happen automatically.
 * 
 * Disconnected areas (or areas connected by hard to map regions, like ocean)
 * may require separate maps.
 *   #map create otherplace
 *   #map goto 1
 *   mw
 * 
 * Insert void rooms to stretch parts of the map so other parts don't overlap.
 *   #map insert n void
 *
 * Mapping asymmetrically connected sets of rooms is tricky.  Step from the
 * main map into the new area, insert a void room behind you, then delete the
 * void room.  That should create a disconected area.  Use room names and links
 * to specify how to get in and out.
 *   #map set roomname info
 *   n
 *   #map insert s void
 *   #map delete s
 *   #map set roomname cryostart
 *   #map goto info
 *   #map link n cryostart
 *   #map goto cryostart
 */

#alias mapstart{} {

  #nop #map offset      <row>   <col>   <row>   <col>;
  #map offset           {1}     {92}    {-4}   {-4};
  #map return;

  #var {mapping} {1};
  #echo {mapping:  on};
}
#alias mapleave{} {
  #var {mapping} {0};
  #map leave;
  #echo {mapping:  off};
}
#alias {M} {
  #if {$mapping == 1} {
    mapleave;
  };
  #else {
    mapstart;
  };
}
#alias {mapwrite} {
  #map write {config/tdome/maps/$map};
  #echo {map written};
}
#alias {mw} {
  mapwrite;
}
#alias mapnear{} {
  #map flag unicode on;
}
#alias mapfar{} {
  #map flag unicode off;
}

#alias runto{} {
  #map run {%1} {$step_time};
}

/* Don't map imaginary rooms when walking into walls.
 * Dream rooms are still an issue.   shows up in
 * response to movement as well as other actions.
 */
#alias {blocked_action} {
  #if {$mapping == 1} {
    #map undo;
  };
};

#action {cannot move that way} {
  blocked_action;
};
#action {cannot go that way} {
  blocked_action;
};
#action {can't go that way} {
  blocked_action;
};
#action {need a boat to go} {
  blocked_action;
};
#action {seem to be closed.} {
  blocked_action;
};
#action {seems to be closed.} {
  blocked_action;
};
#action {You are blocked} {
  blocked_action;
}
#action {blocks your way} {
  blocked_action;
}
#action {A strange force field prevents you from moving} {
  blocked_action;
};

#action {You are too exhausted.} {
  #if {$mapping == 1} {
    #map undo;
  };
}


/* These messages can occur for non-movement actions, which can cause overcorrection. */

/*
#action {Maybe you should get on your feet first?} {
  #if {1 == $patrol} {
    #send stand;
    #if {$mapping == 1} {
      #map undo;
    };
  };
};

#action {No way!  You're fighting for your life!} {
  #if {1 == $patrol} {
    #if {$mapping == 1} {
      #map undo;
    };
  };
};

#action {"In your dreams, or what?"} {
  #if {1 == $patrol} {
    #send wake;
    #if {$mapping == 1} {
      #map undo;
    };
  };
};
*/


/* Fix map upon startup. */
#action {The Temple of Technology - } {
  #map goto tot;
  #if {$mapping == 0} {
    mapleave;
  };
  #else {
    mapstart;
  };
}
/* Fix map upon respawn. */
#action {The Morgue -} {
  #map goto morgue;
}
/* Fix map upon bail out. */
#action {Master Sin's School [ Inside ]} {
  #map goto sin;
};
/* Fix map upon return after rent. */
#action {Bag's Inn reception [ Inside ]} {
  #map goto bag;
}


#alias {sin} {#map run {sin} {$step_time};};
#alias {tot} {#map run {tot} {$step_time};};
#alias {zero} {#map run {zero} {$step_time};};
#alias {pawn} {#map run {pawn} {$step_time};};
#alias {subway} {#map run {ta_subway} {$step_time};};
